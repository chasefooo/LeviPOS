name: Deploy Backend to Lambda

on:
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install
        working-directory: ./src/backend

      - name: Package Backend Code
        run: |
          cd src/backend
          # Create a zip file including all files and dependencies
          zip -r backend.zip .
        shell: bash

      - name: Upload Package to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ARTIFACTS_BUCKET: ${{ secrets.ARTIFACTS_BUCKET }}
        run: |
          aws s3 cp src/backend/backend.zip s3://$ARTIFACTS_BUCKET/backend.zip

      - name: Update Lambda Function Code
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          LAMBDA_FUNCTION_NAME: ${{ secrets.LAMBDA_FUNCTION_NAME }}
          ARTIFACTS_BUCKET: ${{ secrets.ARTIFACTS_BUCKET }}
        run: |
          aws lambda update-function-code \
            --function-name "$LAMBDA_FUNCTION_NAME" \
            --s3-bucket "$ARTIFACTS_BUCKET" \
            --s3-key "backend.zip"
          # Wait until the function update is complete
          aws lambda wait function-updated --function-name "$LAMBDA_FUNCTION_NAME"

      - name: Update Lambda Environment Variables
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          LAMBDA_FUNCTION_NAME: ${{ secrets.LAMBDA_FUNCTION_NAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          USER_POOL_ID: ${{ secrets.USER_POOL_ID }}
          SQUARE_ACCESS_TOKEN: ${{ secrets.SQUARE_ACCESS_TOKEN }}
        run: |
          aws lambda update-function-configuration \
            --function-name "$LAMBDA_FUNCTION_NAME" \
            --environment "Variables={DB_HOST=$DB_HOST,DB_USERNAME=$DB_USERNAME,DB_PASSWORD=$DB_PASSWORD,DB_NAME=$DB_NAME,USER_POOL_ID=$USER_POOL_ID,SQUARE_ACCESS_TOKEN=$SQUARE_ACCESS_TOKEN}"
